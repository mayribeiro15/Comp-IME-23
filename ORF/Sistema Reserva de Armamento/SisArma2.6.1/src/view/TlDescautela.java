/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Controller.ControllerEquipamento;
import Controller.ControllerItem;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.bean.Equipamento;
import model.bean.FuncaoMilitar;
import model.bean.Item;
import model.bean.Militar;
import model.dao.MilitarDao;
import servicos.CisBiox;
import servicos.LimitaTexto;
import servicos.Numero;

/**
 *
 * @author Asus
 */
public class TlDescautela extends javax.swing.JInternalFrame {

    CisBiox biox = new CisBiox();
    private byte[] digital;
    List<Militar> listabiometria;
    int codigoMilitar;
    Integer codigoArmeiro;
    Integer codigoOficialDia = null;
    String loginMilitar;

    public TlDescautela(int codigoArmeiro) {
        initComponents();
        setTitle("DESCAUTELA");
        jTidMilitar.setDocument(new LimitaTexto(10));
        jTlidMilitar.setDocument(new LimitaTexto(10));
        jPassword.setDocument(new Numero());
        this.codigoArmeiro = codigoArmeiro;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jBcancelar = new javax.swing.JButton();
        jBremoveritem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelLogin = new javax.swing.JLabel();
        jTidMilitar = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jRadioButtonMilitarResponsavel = new javax.swing.JRadioButton();
        jRadioButtonOficialDia = new javax.swing.JRadioButton();
        jBlerBiometria = new javax.swing.JButton();
        jBcancelarBiometria = new javax.swing.JToggleButton();
        jLabelLoginMilitar = new javax.swing.JLabel();
        jLabelSenha = new javax.swing.JLabel();
        jTlidMilitar = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        jBautenticar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabelaDescautela = new javax.swing.JTable();
        jBremoverTudo = new javax.swing.JButton();

        setFrameIcon(null);

        jBcancelar.setBackground(new java.awt.Color(242, 67, 56));
        jBcancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconeSisArma/cancela32.png"))); // NOI18N
        jBcancelar.setText("CANCELAR");
        jBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarActionPerformed(evt);
            }
        });

        jBremoveritem.setBackground(new java.awt.Color(75, 184, 75));
        jBremoveritem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBremoveritem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconeSisArma/salvar.png"))); // NOI18N
        jBremoveritem.setText("  DESCAULTEAR ITEM");
        jBremoveritem.setEnabled(false);
        jBremoveritem.setFocusable(false);
        jBremoveritem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jBremoveritem.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBremoveritem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBremoveritemActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Pesquisar Militar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N

        jLabelLogin.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabelLogin.setText("Informe o login:");

        jTidMilitar.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jTidMilitar.setEnabled(false);
        jTidMilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTidMilitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLogin)
                .addGap(18, 18, 18)
                .addComponent(jTidMilitar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLogin)
                    .addComponent(jTidMilitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Buscar Função", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N

        buttonGroup1.add(jRadioButtonMilitarResponsavel);
        jRadioButtonMilitarResponsavel.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jRadioButtonMilitarResponsavel.setSelected(true);
        jRadioButtonMilitarResponsavel.setText("Militar Responsável");
        jRadioButtonMilitarResponsavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMilitarResponsavelActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonOficialDia);
        jRadioButtonOficialDia.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jRadioButtonOficialDia.setText("Oficial de Dia");
        jRadioButtonOficialDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOficialDiaActionPerformed(evt);
            }
        });

        jBlerBiometria.setBackground(new java.awt.Color(255, 255, 255));
        jBlerBiometria.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBlerBiometria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconeSisArma/ler_biometria.png"))); // NOI18N
        jBlerBiometria.setBorder(null);
        jBlerBiometria.setBorderPainted(false);
        jBlerBiometria.setContentAreaFilled(false);
        jBlerBiometria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBlerBiometria.setDisabledSelectedIcon(null);
        jBlerBiometria.setFocusPainted(false);
        jBlerBiometria.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jBlerBiometria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBlerBiometriaActionPerformed(evt);
            }
        });

        jBcancelarBiometria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconeSisArma/cancelar_biometria.png"))); // NOI18N
        jBcancelarBiometria.setBorder(null);
        jBcancelarBiometria.setBorderPainted(false);
        jBcancelarBiometria.setContentAreaFilled(false);
        jBcancelarBiometria.setFocusPainted(false);
        jBcancelarBiometria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarBiometriaActionPerformed(evt);
            }
        });

        jLabelLoginMilitar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelLoginMilitar.setText("LOGIN:");

        jLabelSenha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelSenha.setText("SENHA:");

        jTlidMilitar.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jTlidMilitar.setEnabled(false);
        jTlidMilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTlidMilitarActionPerformed(evt);
            }
        });

        jPassword.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jPassword.setEnabled(false);
        jPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordActionPerformed(evt);
            }
        });
        jPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordKeyReleased(evt);
            }
        });

        jBautenticar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jBautenticar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconeSisArma/pesquisar.png"))); // NOI18N
        jBautenticar.setBorder(null);
        jBautenticar.setBorderPainted(false);
        jBautenticar.setContentAreaFilled(false);
        jBautenticar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBautenticarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonOficialDia)
                    .addComponent(jRadioButtonMilitarResponsavel))
                .addGap(63, 63, 63)
                .addComponent(jBlerBiometria)
                .addGap(59, 59, 59)
                .addComponent(jBcancelarBiometria)
                .addGap(89, 89, 89)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSenha)
                    .addComponent(jLabelLoginMilitar))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTlidMilitar, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(jPassword))
                .addGap(62, 62, 62)
                .addComponent(jBautenticar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBcancelarBiometria)
                        .addComponent(jBlerBiometria)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jRadioButtonMilitarResponsavel)
                            .addGap(18, 18, 18)
                            .addComponent(jRadioButtonOficialDia)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelLoginMilitar)
                            .addComponent(jTlidMilitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jBautenticar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabelaDescautela.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jTabelaDescautela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Cautela", "IdEqp", "Equipamento", "Série", "Arma", "Calibre", "Fabricante", "Qtd", "Status ", "Destino", "Data / Hora", "Obs"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTabelaDescautela.setRowHeight(25);
        jTabelaDescautela.setRowMargin(5);
        jTabelaDescautela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTabelaDescautela.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTabelaDescautela);
        if (jTabelaDescautela.getColumnModel().getColumnCount() > 0) {
            jTabelaDescautela.getColumnModel().getColumn(0).setMinWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(0).setMaxWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(1).setMinWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(1).setPreferredWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(1).setMaxWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(7).setMinWidth(30);
            jTabelaDescautela.getColumnModel().getColumn(7).setPreferredWidth(30);
            jTabelaDescautela.getColumnModel().getColumn(7).setMaxWidth(30);
            jTabelaDescautela.getColumnModel().getColumn(11).setMinWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(11).setPreferredWidth(0);
            jTabelaDescautela.getColumnModel().getColumn(11).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBremoverTudo.setBackground(new java.awt.Color(75, 184, 75));
        jBremoverTudo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jBremoverTudo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconeSisArma/salvar.png"))); // NOI18N
        jBremoverTudo.setText("  DESCAULTEAR TUDO");
        jBremoverTudo.setEnabled(false);
        jBremoverTudo.setFocusable(false);
        jBremoverTudo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jBremoverTudo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jBremoverTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBremoverTudoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 396, Short.MAX_VALUE)
                        .addComponent(jBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jBremoverTudo)
                        .addGap(18, 18, 18)
                        .addComponent(jBremoveritem, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBremoveritem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBremoverTudo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTidMilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTidMilitarActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        loginMilitar = jTidMilitar.getText();
        autenticarMilitar(loginMilitar);
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);

    }//GEN-LAST:event_jTidMilitarActionPerformed

    private void jBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarActionPerformed
        CisBiox dll = new CisBiox();
        dll.cancelarLeitura();
        biox.finalizar();
        dispose();
    }//GEN-LAST:event_jBcancelarActionPerformed

    private void jBremoveritemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBremoveritemActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        removerItens();
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);

    }//GEN-LAST:event_jBremoveritemActionPerformed

    private void jBremoverTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBremoverTudoActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        removerTudo();
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);
    }//GEN-LAST:event_jBremoverTudoActionPerformed

    private void jRadioButtonMilitarResponsavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMilitarResponsavelActionPerformed
        CisBiox dll = new CisBiox();
        dll.cancelarLeitura();
        int iRetorno = biox.finalizar();
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        capturaMilitarResponsavel();
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);

    }//GEN-LAST:event_jRadioButtonMilitarResponsavelActionPerformed

    private void jRadioButtonOficialDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOficialDiaActionPerformed
        CisBiox dll = new CisBiox();
        dll.cancelarLeitura();
        int iRetorno = biox.finalizar();
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        capturaOficialDia();
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);

    }//GEN-LAST:event_jRadioButtonOficialDiaActionPerformed

    private void jBlerBiometriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBlerBiometriaActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        if (getBotao().equals("Oficial")) {
            capturaOficialDia();

        } else {
            capturaMilitarResponsavel();

        }
        jBcancelarBiometria.setEnabled(true);
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);
    }//GEN-LAST:event_jBlerBiometriaActionPerformed

    private void jBcancelarBiometriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarBiometriaActionPerformed
        CisBiox dll = new CisBiox();
        dll.cancelarLeitura();
        int iRetorno = biox.finalizar();
        jTlidMilitar.setEnabled(true);
        jPassword.setEnabled(true);
        jTlidMilitar.requestFocus();

    }//GEN-LAST:event_jBcancelarBiometriaActionPerformed

    private void jPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        if (getBotao().equals("Oficial")) {
            autenticaOficialDiaItem();
        } else {
            autenticaMilitarItem();
        }
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);
    }//GEN-LAST:event_jPasswordActionPerformed

    private void jBautenticarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBautenticarActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        jPanel2.setCursor(cursor);
        if (getBotao().equals("Oficial")) {
            autenticaOficialDiaItem();
        } else {
            autenticaMilitarItem();
        }
        cursor = Cursor.getDefaultCursor();
        jPanel2.setCursor(cursor);
    }//GEN-LAST:event_jBautenticarActionPerformed

    private void jTlidMilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTlidMilitarActionPerformed
        jPassword.requestFocus();
    }//GEN-LAST:event_jTlidMilitarActionPerformed

    private void jPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordKeyReleased
        if (jPassword.getPassword().length > 6) {
            JOptionPane.showMessageDialog(this, "APENAS 6 NÚMEROS");
            evt.consume();
            jPassword.setText("");
            jPassword.grabFocus();
        }
    }//GEN-LAST:event_jPasswordKeyReleased

    private void autenticarMilitar(String login) {
        DefaultTableModel tabela = (DefaultTableModel) jTabelaDescautela.getModel();
        try {
            List<Item> lista = new ControllerItem().listarCautelaPorMilitar(login);
            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(null, "MILITAR NÃO POSSUI CAUTELA");
                tabela.setNumRows(0);
            } else {
                tabela.setNumRows(0);
                for (Item i : lista) {
                    tabela.addRow(new Object[]{
                        i.getId(),
                        i.getEquipamento().getId(),
                        i.getEquipamento().getNome(),
                        i.getEquipamento().getSerie(),
                        i.getEquipamento().getArma().getArma(),
                        i.getEquipamento().getCalibre().getCalibre(),
                        i.getEquipamento().getFabricante().getFabricante(),
                        i.getQtd(),
                        i.getStatus(),
                        i.getCautela().getDestino().getDestino(),
                        i.getData_cautela(),});
                }
                jBremoverTudo.setEnabled(true);
                jBremoveritem.setEnabled(true);
            }
        } catch (Exception ex) {
            System.out.println("Erro ao criar a lista da descautela" + ex.getMessage());
        }
    }

    private void removerItens() {

        DefaultTableModel tabela = (DefaultTableModel) jTabelaDescautela.getModel();

        int linha = jTabelaDescautela.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um item da tabela");
        } else {
            Equipamento eqp = new Equipamento();
            Item ite = new Item();
            int idItem = (int) tabela.getValueAt(linha, 0);
            String obs = (String) tabela.getValueAt(linha, 11);
            int idEqp = (int) tabela.getValueAt(linha, 1);
            int qtd = (int) tabela.getValueAt(linha, 7);
            FuncaoMilitar armeiro = new FuncaoMilitar();
            armeiro.setId(codigoArmeiro);
            ite.setArmeiroDescautela(armeiro);
            FuncaoMilitar oficialDia = new FuncaoMilitar();
            oficialDia.setId(codigoOficialDia);
            ite.setOficialDia(oficialDia);
            ite.setId(idItem);
            ite.setObs(obs);
            eqp.setId(idEqp);
            eqp.setQtd(qtd);
            ControllerEquipamento controleEqp = new ControllerEquipamento();
            ControllerItem controleItem = new ControllerItem();
            try {
                controleItem.descautelarItem(ite);
                controleEqp.descautelar(eqp);
                tabela.removeRow(linha);
                JOptionPane.showMessageDialog(null, "ITEM DESCAUTELADO");
                int conta = tabela.getRowCount();
                if (conta == 0) {
                    dispose();
                }
            } catch (SQLException ex) {
                System.out.println("Erro Ao Descautelar" + ex.getMessage());
            }
        }
    }

    private void removerTudo() {
        Object[] options = {"Sim", "Não"};
        int opcao = JOptionPane.showOptionDialog(null, "Descautelar todos os itens?", "Informação",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        if (opcao == 0) {
            DefaultTableModel tabela = (DefaultTableModel) jTabelaDescautela.getModel();
            int linha = tabela.getRowCount();
            for (int i = 0; i < linha; i++) {
                int linhatabela = 0;
                Equipamento eqp = new Equipamento();
                Item ite = new Item();
                int idItem = (int) tabela.getValueAt(linhatabela, 0);
                String obs = (String) tabela.getValueAt(linhatabela, 11);
                int idEqp = (int) tabela.getValueAt(linhatabela, 1);
                int qtd = (int) tabela.getValueAt(linhatabela, 7);
                FuncaoMilitar armeiro = new FuncaoMilitar();
                armeiro.setId(codigoArmeiro);
                ite.setArmeiroDescautela(armeiro);
                FuncaoMilitar oficialDia = new FuncaoMilitar();
                oficialDia.setId(codigoOficialDia);
                ite.setOficialDia(oficialDia);
                ite.setId(idItem);
                ite.setObs(obs);
                eqp.setId(idEqp);
                eqp.setQtd(qtd);
                ControllerEquipamento controleEqp = new ControllerEquipamento();
                ControllerItem controleItem = new ControllerItem();
                try {
                    controleItem.descautelarItem(ite);
                    controleEqp.descautelar(eqp);
                    tabela.removeRow(linhatabela);

                } catch (SQLException ex) {
                    System.out.println("Erro Ao Descautelar" + ex.getMessage());
                }

            }

            JOptionPane.showMessageDialog(null, "Todos os itens descautelados");
            dispose();

        } else {
            JOptionPane.showMessageDialog(null, "Nenhum item descautelado");
        }
    }

    private void capturaMilitarResponsavel() {

        new Thread() {
            public void run() {
                try {
                    int iRetorno = biox.iniciar();
                    if (iRetorno != 1) {
                        JOptionPane.showMessageDialog(null, "Erro: " + CisBiox.mensagens(iRetorno));
                        return;
                    } else if (biox.getResultado() != 1) {
                        biox.finalizar();
                        return;
                    }
                    digital = biox.capturarDigital();
                    biox.finalizar();
                    leituraMilitarResponsavel();
                } catch (HeadlessException e) {
                    System.out.println("Erro ainda nao sei " + e.getMessage());
                }
            }
        ;
    }

    .start();
    }
    
    private void leituraMilitarResponsavel() {
        MilitarDao mDao = new MilitarDao();
        biox.iniciar();
        int cod = 0;
        try {
            listabiometria = mDao.digitalItemCautela();
            for (Militar militar : listabiometria) {
                if ((biox.compararDigital(digital, militar.getDigital())) == 1) {
                    codigoMilitar = militar.getId();
                    loginMilitar = militar.getLogin();
                    autenticarMilitar(loginMilitar);
                    cod = 1;
                    break;
                }
            }
            if (cod == 0) {
                for (Militar militar : listabiometria) {
                    if ((biox.compararDigital(digital, militar.getDigital())) == -2) {
                        JOptionPane.showMessageDialog(null, "MILITAR SEM CAUTELA");
                        break;
                    }
                }
            }
            biox.finalizar();
        } catch (HeadlessException | SQLException ex) {
            System.out.println("Leitura Erro" + ex.getMessage());
        }

    }

    private void capturaOficialDia() {
        new Thread() {
            public void run() {
                try {
                    int iRetorno = biox.iniciar();
                    if (iRetorno != 1) {
                        JOptionPane.showMessageDialog(null, "Erro: " + CisBiox.mensagens(iRetorno));
                        return;
                    } else if (biox.getResultado() != 1) {
                        biox.finalizar();
                        return;
                    }
                    digital = biox.capturarDigital();
                    biox.finalizar();
                    leituraOficialDia();
                } catch (Exception e) {
                    System.out.println("Erro ainda nao sei " + e.getMessage());
                }
            }
        ;
    }

    .start();
    }
    
    private void leituraOficialDia() {
        CisBiox biox2 = new CisBiox();
        MilitarDao mDao = new MilitarDao();
        biox2.iniciar();
        int cod = 0;
        try {
            listabiometria = mDao.digitalOficialDia();
            for (Militar militar : listabiometria) {
                if ((biox2.compararDigital(digital, militar.getDigital())) == 1) {
                    jTidMilitar.setEnabled(true);
                    codigoOficialDia = militar.getIdoficialDia().getId();
                    cod = 1;
                    break;
                }
            }

            if (cod == 0) {
                for (Militar militar : listabiometria) {
                    if ((biox2.compararDigital(digital, militar.getDigital())) == -2) {
                        JOptionPane.showMessageDialog(null, "SEM PERMISSÃO ");
                        break;
                    }
                }
            }
            biox2.finalizar();
        } catch (Exception ex) {
            System.out.println("Leitura Erro" + ex.getMessage());
            JOptionPane.showMessageDialog(this, "BANCO DESCONECTADO");
            biox2.finalizar();
        }

    }

    private String getBotao() {
        String tipo = "Militar";
        if (jRadioButtonOficialDia.isSelected()) {
            tipo = "Oficial";
        }
        return tipo;
    }

    private void autenticaMilitarItem() {

        String login = jTlidMilitar.getText();
        String senha = jPassword.getText();

        // valida login e senha        
        boolean mil;
        try {
            mil = new MilitarDao().autenticacao(login, senha);
            if (mil == true) {
                autenticarMilitar(login);
            } else {
                JOptionPane.showMessageDialog(null," VERIFIQUE LOGIN E SENHA\n VERIFIQUE STATUS DO MILITAR");
                jTlidMilitar.setText("");
                jPassword.setText("");
                jTlidMilitar.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(TlDescautela.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void autenticaOficialDiaItem() {
        String login = jTlidMilitar.getText();
        String senha = jPassword.getText();
        try {
            codigoOficialDia = new MilitarDao().autenticacaoOficialDia(login, senha);
            if (codigoOficialDia == null) {
                JOptionPane.showMessageDialog(null," VERIFIQUE LOGIN E SENHA\n VERIFIQUE STATUS DO MILITAR");
                jTlidMilitar.setText("");
                jPassword.setText("");
                jTlidMilitar.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Oficial de Dia Autenticado!");
                jTidMilitar.setEnabled(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TlDescautela.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void limparCampos() {
        jTlidMilitar.setText("");
        jPassword.setText("");
        jTidMilitar.setText("");
        jTidMilitar.setEnabled(false);
        jBremoverTudo.setEnabled(false);
        jBremoveritem.setEnabled(false);
        jTlidMilitar.setEnabled(false);
        jPassword.setEnabled(false);
        jRadioButtonMilitarResponsavel.setSelected(true);        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBautenticar;
    private javax.swing.JButton jBcancelar;
    private javax.swing.JToggleButton jBcancelarBiometria;
    private javax.swing.JButton jBlerBiometria;
    private javax.swing.JButton jBremoverTudo;
    private javax.swing.JButton jBremoveritem;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelLoginMilitar;
    private javax.swing.JLabel jLabelSenha;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JRadioButton jRadioButtonMilitarResponsavel;
    private javax.swing.JRadioButton jRadioButtonOficialDia;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTabelaDescautela;
    private javax.swing.JTextField jTidMilitar;
    private javax.swing.JTextField jTlidMilitar;
    // End of variables declaration//GEN-END:variables
}
